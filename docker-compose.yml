# docker-compose.yml
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: servicesync-postgres
    environment:
      POSTGRES_DB: servicesync
      POSTGRES_USER: servicesync
      POSTGRES_PASSWORD: servicesync123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - servicesync-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U servicesync -d servicesync"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: servicesync-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - servicesync-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U servicesync -d servicesync" ]
      interval: 30s  # Increased from 10s
      timeout: 10s   # Increased from 5s
      retries: 5
      start_period: 60s  # Added start period

  # Spring Boot Application
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: servicesync-app
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      DB_HOST: postgres
#      DB_PORT: 5432
#      DB_NAME: servicesync
#      DB_USERNAME: servicesync
#      DB_PASSWORD: servicesync123
#      REDIS_HOST: redis
#      REDIS_PORT: 6379
#      JWT_SECRET: c2VydmljZXN5bmMtc2VjcmV0LWtleS1mb3ItcHJvZHVjdGlvbi11c2U=
#      TZ: Africa/Johannesburg
#    ports:
#      - "8080:8080"
#    depends_on:
#      postgres:
#        condition: service_healthy
#      redis:
#        condition: service_healthy
#    networks:
#      - servicesync-network
#    volumes:
#      - app_uploads:/app/uploads
#      - app_logs:/app/logs
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 60s

networks:
  servicesync-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local